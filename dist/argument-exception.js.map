{"version":3,"file":"argument-exception.js","sourceRoot":"","sources":["../src/argument-exception.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AACxC,8BAA4B;AAE5B,uBAA+B,SAAQ,qBAAS;IAM5C,IAAW,OAAO,KAAa,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,IAAW,MAAM,KAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAKpD,YAAmB,OAAe,EAAE,MAAc,EAAE,cAA0B;QAE1E,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,mBAAmB,EAAE,CAAC;YACjD,OAAO,GAAG,WAAW,CAAC;QAE1B,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,mBAAmB,EAAE,CAAC;YAC/C,MAAM,GAAG,cAAc,CAAC;QAE5B,MAAM,OAAO,GAAG,qBAAqB,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAE9D,KAAK,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QAE/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;CACJ;AA3BD,8CA2BC","sourcesContent":["import { Exception } from \"./exception\";\nimport \"@nivinjoseph/n-ext\";\n\nexport class ArgumentException extends Exception\n{\n    private readonly _argName: string;\n    private readonly _reason: string;\n    \n    \n    public get argName(): string { return this._argName; }\n    public get reason(): string { return this._reason; }\n    \n    \n    public constructor(argName: string, reason: string);\n    public constructor(argName: string, reason: string, innerException: Exception);\n    public constructor(argName: string, reason: string, innerException?: Exception)\n    {\n        if (argName == null || argName.isEmptyOrWhiteSpace())\n            argName = \"<UNKNOWN>\";\n\n        if (reason == null || reason.isEmptyOrWhiteSpace())\n            reason = \"is not valid\";\n        \n        const message = \"Argument '{0}' {1}.\".format(argName, reason);\n\n        super(message, innerException);\n        \n        this._argName = argName;\n        this._reason = reason;\n    }\n}"]}