{"version":3,"file":"invalidOperationException.js","sourceRoot":"","sources":["../src/invalidOperationException.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yCAAoC;AACpC,iBAAe;AAEf;IAAwC,6CAAS;IAI7C,mCAAmB,SAAiB,EAAE,cAA0B;QAAhE,iBAQC;QANG,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,mBAAmB,EAAE,CAAC;YACrD,SAAS,GAAG,WAAW,CAAC;QAE5B,IAAM,OAAO,GAAG,6BAA6B,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEhE,QAAA,kBAAM,OAAO,EAAE,cAAc,CAAC,SAAC;;IACnC,CAAC;IACL,gCAAC;AAAD,CAAC,AAbD,CAAwC,mBAAS,GAahD;AAED,kBAAe,yBAAyB,CAAC","sourcesContent":["import Exception from \"./exception\";\nimport \"n-ext\";\n\nclass InvalidOperationException extends Exception\n{\n    public constructor(operation: string);\n    public constructor(operation: string, innerException: Exception);\n    public constructor(operation: string, innerException?: Exception)\n    {\n        if (operation == null || operation.isEmptyOrWhiteSpace())\n            operation = \"<UNKNOWN>\";\n\n        const message = \"Operation '{0}' is invalid.\".format(operation);\n\n        super(message, innerException);\n    }\n}\n\nexport default InvalidOperationException;"]}